trigger:
  branches:
    include:
      - main  # Change this if you want other branches to trigger the pipeline

pool:
  name: 'Self-Hosted'  # Use your local agent pool

variables:
  JAVA_VERSION: '17'
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2

stages:
  - stage: Build_and_Test
    displayName: 'Build and Test'
    jobs:
      - job: Build
        displayName: 'Build and Test with Maven'
        steps:
          - script: |
              echo "Current Directory: %CD%"
              dir
            displayName: 'Debug - List Files in Root Directory'

          - script: |
              cd lootbox-service
              echo "Inside lootbox-service directory:"
              dir
            displayName: 'Debug - List Files in lootbox-service'

          - task: Cache@2
            displayName: 'Cache Maven Dependencies'
            inputs:
              key: 'maven | "$(Agent.OS)" | **/pom.xml'
              restoreKeys: 'maven | "$(Agent.OS)"'
              path: $(MAVEN_CACHE_FOLDER)

          - script: |
              cd lootbox-service && mvn clean install -DskipTests
            displayName: 'Build Project'
            workingDirectory: 'lootbox-service'

          - script: |
              cd lootbox-service && mvn test -Dspring.datasource.url=jdbc:h2:mem:testdb -Dspring.datasource.driver-class-name=org.h2.Driver -Dspring.datasource.username=sa -Dspring.datasource.password= -Dspring.sql.init.mode=never
            displayName: 'Run Unit Tests with H2'
            workingDirectory: 'lootbox-service'

          - task: PublishTestResults@2
            displayName: 'Publish Test Results'
            inputs:
              testResultsFiles: '**/lootbox-service/target/surefire-reports/TEST-*.xml'
              testRunTitle: 'Maven Unit Tests'

          - task: CopyFiles@2
            displayName: 'Copy JAR for Artifacts'
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/lootbox-service/target'
              Contents: '*.jar'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish JAR Artifact'
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'drop'
