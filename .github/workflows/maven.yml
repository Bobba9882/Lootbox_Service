name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Nodig voor correcte SonarCloud analyse

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build Project
        run: |
          cd lootbox-service
          mvn clean install -DskipTests

      - name: Run Unit Tests with H2
        run: |
          cd lootbox-service
          mvn test -Dspring.datasource.url=jdbc:h2:mem:testdb \
                   -Dspring.datasource.driver-class-name=org.h2.Driver \
                   -Dspring.datasource.username=sa \
                   -Dspring.datasource.password= \
                   -Dspring.sql.init.mode=never

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: lootbox-service/target/surefire-reports/
          retention-days: 7

  sonar-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Nodig voor correcte SonarCloud analyse

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and Analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd lootbox-service
          mvn -B verify sonar:sonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  docker-build-and-push:
    name: Docker Build & Security Scan
    runs-on: ubuntu-latest
    needs: [build-and-test, sonar-analysis]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/lootbox-service:latest ./lootbox-service

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKER_USERNAME }}/lootbox-service:latest'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/lootbox-service:latest
